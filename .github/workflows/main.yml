# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint :
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: index.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Test
        run: ./gradlew test

      - name: Upload unit-test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-11
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Start Emulator and Wait
        uses: reactivecircus/android-emulator-runner@v2
        with:
            api-level: 28
            target: google_apis
            arch: x86_64
            profile: pixel_3a
            disable-animations: true
            headless: true
            script: "JAVA_HOME=$JAVA_HOME_11_X64 && ./gradlew connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=\
            org.mozilla.fenix.ui.NavigationToolbarTest#visitURLTest"

      - name: Wait for Emulator to Boot
        run: |
            max_attempts=10
            attempt=0
            until adb shell getprop sys.boot_completed | grep -m 1 "1"; do
              attempt=$((attempt + 1))
              if [ $attempt -ge $max_attempts ]; then
                echo "Emulator failed to start"
                exit 1
              fi
              echo "Waiting for emulator to boot..."
              sleep 10
            done
            echo "Emulator booted"

      - name: Run espresso test
        run: ./gradlew connectedCheck

      - name: Upload instrumentation-test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected

  package:
    needs: [instrumentation-test]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: news-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
